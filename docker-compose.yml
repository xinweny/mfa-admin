services:
  db:
    image: postgres
    restart: always
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: mfa
    ports:
      - 5433:5432
  api:
    image: mfa/api
    build: ./api/MfaApi
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      PGSQL_CONNECTION_STRING: Host=db;Port=5432;Database=mfa;TrustServerCertificate=true;
      AUTH0_AUTHORITY: /run/secrets/auth0_authority
      Auth0_AUDIENCE: /run/secrets/auth0_audience
    secrets:
      - auth0_authority
      - auth0_audience
    ports:
      - 8080:8080
  dashboard:
    image: mfa/admin-dashboard
    build: ./dashboard
    command: npm run dev
    restart: always
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: true
      NEXT_PUBLIC_MFA_API_URL: http://api:8080/api
      AUTH0_BASE_URL: http://dashboard:3000
      AUTH0_ISSUER_BASE_URL: /run/secrets/auth0_authority
      AUTH0_CLIENT_ID: /run/secrets/auth0_client_id
      AUTH0_CLIENT_SECRET: /run/secrets/auth0_client_secret
      AUTH0_AUDIENCE: /run/secrets/auth0_audience
    secrets:
      - auth0_authority
      - auth0_client_id
      - auth0_client_secret
      - auth0_audience
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: rebuild
          path: package.json
          target: /app
secrets:
  auth0_authority:
    environment: AUTH0_AUTHORITY
  auth0_audience:
    environment: AUTH0_AUDIENCE
  auth0_client_secret:
    environment: AUTH0_CLIENT_SECRET
  auth0_client_id:
    environment: AUTH0_CLIENT_ID
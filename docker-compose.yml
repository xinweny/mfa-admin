services:
  db:
    image: postgres
    restart: always
    volumes:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_DB: mfa
      POSTGRES_USER: mfa
      POSTGRES_PASSWORD: mfa
    ports:
      - 5432:5432
  api:
    image: mfa/api
    build:
      context: ./api/MfaApi
      args:
        PGSQL_CONNECTION_STRING: Server=db;Port=5432;Database=mfa;Username=mfa;Password=mfa;Trust Server Certificate=true;
        AUTH0_AUTHORITY: /run/secrets/auth0_authority
        AUTH0_AUDIENCE: /run/secrets/auth0_audience
        CLIENT_URL: http://dashboard:3000
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    secrets:
      - auth0_authority
      - auth0_audience
    ports:
      - 8080:8080
    depends_on:
      - db
  dashboard:
    image: mfa/admin-dashboard
    build:
      context: ./dashboard
    restart: always
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_MFA_API_URL: http://api:8080/api
      AUTH0_BASE_URL: http://dashboard:3000
      AUTH0_ISSUER_BASE_URL: /run/secrets/auth0_authority
      AUTH0_CLIENT_ID: /run/secrets/auth0_client_id
      AUTH0_SECRET: /run/secrets/auth0_secret
      AUTH0_AUDIENCE: /run/secrets/auth0_audience
    secrets:
      - auth0_authority
      - auth0_client_id
      - auth0_secret
      - auth0_audience
    volumes:
      - ./dashboard:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    depends_on:
      - api
secrets:
  auth0_authority:
    environment: AUTH0_AUTHORITY
  auth0_audience:
    environment: AUTH0_AUDIENCE
  auth0_secret:
    environment: AUTH0_SECRET
  auth0_client_id:
    environment: AUTH0_CLIENT_ID